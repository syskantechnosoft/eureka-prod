name: Eureka Server CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Build with Maven
      run: ./mvnw clean verify
    
    - name: Run Tests
      run: ./mvnw test
    
    - name: Analyze with SonarCloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: ./mvnw sonar:sonar -Dsonar.projectKey=eureka-server -Dsonar.organization=your-org -Dsonar.host.url=https://sonarcloud.io
    
    - name: Build and Publish Docker Image
      if: github.event_name != 'pull_request'
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        ./mvnw spring-boot:build-image -Dspring-boot.build-image.imageName=yourorg/eureka-server:${{ github.sha }}
        docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
        docker push yourorg/eureka-server:${{ github.sha }}
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          docker tag yourorg/eureka-server:${{ github.sha }} yourorg/eureka-server:latest
          docker push yourorg/eureka-server:latest
        fi
    
    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
    
    - name: Upload Test and Coverage Reports
      uses: actions/upload-artifact@v3
      with:
        name: test-reports
        path: |
          target/site/jacoco
          target/surefire-reports

  deploy-to-dev:
    needs: build-and-test
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Update Kubernetes deployment
      run: |
        aws eks update-kubeconfig --name dev-cluster --region us-east-1
        kubectl set image deployment/eureka-server eureka-server=yourorg/eureka-server:${{ github.sha }} -n microservices
        kubectl rollout status deployment/eureka-server -n microservices

  deploy-to-prod:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
        
    - name: Update Kubernetes deployment
      run: |
        aws eks update-kubeconfig --name prod-cluster --region us-east-1
        kubectl set image deployment/eureka-server eureka-server=yourorg/eureka-server:${{ github.sha }} -n microservices
        kubectl rollout status deployment/eureka-server -n microservices
